??tidyr
names(df.sst) <- c("Week","NINO1+2_SST","NINO1+2_SSTA","NINO3_SST","NINO3_SSTA","NINO34_SST","NINO34_SSTA","NINO4_SST","NINO4_SSTA")
df.sst[order(df.sst$Week),]
df.sst <- df.sst[order(df.sst$Week),]
df.sst <- df.sst[order(-df.sst$Week),]
str(df.sst)
colsum(is.na(df.sst))
colSums(is.na(df.sst))
q3.1 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
head q3.1
head(q3.1)
agriculture.logical <- q3.1[(q3.1$acr==3) & (q3.1$ags==6)]
head agriculture.logical
head (agriculture.logical)
agriculture.logical
agriculture.logical <- q3.1[(q3.1$ACR==3) & (q3.1$AGS==6)]
agriculture.logical <- q3.1[,(q3.1$ACR==3) & (q3.1$AGS==6)]
agriculture.logical <- q3.1((q3.1$ACR==3) & (q3.1$AGS==6))
agriculture.logical <- q3.1[((q3.1$ACR==3) & (q3.1$AGS==6))]
agriculture.logical <- q3.1[((q3.1$ACR==3) & (q3.1$AGS==6)),]
head agriculture.logical
View(agriculture.logical)
View(agriculture.logical)
View(agriculture.logical)
q3.1[((q3.1$ACR==3) & (q3.1$AGS==6))]
q3.1[((q3.1$ACR==3) & (q3.1$AGS==6)),]
na.omit(q3.1[((q3.1$ACR==3) & (q3.1$AGS==6)),])
q3.1[(na.omit(q3.1$ACR==3)) & na.omit(q3.1$AGS==6)),]
q3.1[(na.omit(q3.1$ACR==3) & na.omit(q3.1$AGS==6),]
q3.1[(na.omit(q3.1$ACR==3) & na.omit(q3.1$AGS==6)]
q3.1[na.omit(q3.1$ACR==3) & na.omit(q3.1$AGS==6),]
head(q3.1[na.omit(q3.1$ACR==3) & na.omit(q3.1$AGS==6),])
testLogical <- q3.1[q3.1$ACR == 3]
testLogical <- q3.1[q3.1$ACR == 3,]
View(testLogical)
View(testLogical)
agricultureLogical = (q3.1$ACS == 3) & (q3.1$AGS == 6)
View(agriculture.logical)
View(agriculture.logical)
agricultureLogical = ifelse((q3.1$ACS == 3) & (q3.1$AGS == 6)), TRUE, FALSE)
agricultureLogical = ifelse(((q3.1$ACS == 3) & (q3.1$AGS == 6)), TRUE, FALSE)
agricultureLogical
agricultureLogical = ifelse(((q3.1$ACR == 3) & (q3.1$AGS == 6)), TRUE, FALSE)
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
picture <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
picture <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
con <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
readJPEG(con, native = TRUE)
download.file(con, mode="wb")
download.file(con, "picture",mode="wb")
download.file(con,picture,mode="wb")
download.file(con,picture.jeff,method="curl", mode="wb")
touch("picture.jeff"")
)
;
""
con
target <- "picture"
download.file(con,target,method="curl", mode="wb")
pic_jeff <- readJPEG(target, native = TRUE)
quantile(pic_jeff,.3,.8)
quantile(pic_jeff,c(.3,.8)
)
con <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv
con <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
GDP <- read.csv(con)
con = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
education <- read.csv(con)
View(GDP)
View(education)
View(GDP)
name(GDP)
names(GDP)
names(GDP$X) <- "CountryCode"
View(GDP)
View(GDP)
colnames(GDP)[1] <- "CountryCode"
merge(GDP, education, "CountryCode")
GDP_Edu <- merge(GDP, education, "CountryCode")
View(GDP_Edu)
View(GDP_Edu)
GDP_Edu <- GDP_Edu[desc(GDP_Edu$Gross.domestic.product.2012)]
desc
desc()
library(plyr)
?desc
GDP_Edu <- GDP_Edu[desc(GDP_Edu$Gross.domestic.product.2012)]
GDP_Edu <- merge(GDP, education, "CountryCode")
GDP_Edu <- GDP_Edu[desc(as.numeric((GDP_Edu$Gross.domestic.product.2012))]
GDP_Edu$Gross.domestic.product.2012 <- as.numeric(GDP_Edu$Gross.domestic.product.2012)
GDP_Edu <- GDP_Edu[desc(GDP_Edu$Gross.domestic.product.2012)]
GDP_Edu(13)
GDP_Edu[13]
GDP_Edu[13,2]
GDP_Edu[2,]
GDP_Edu[13,]
View(GDP_Edu)
GDP_Edu <- merge(GDP, education, "CountryCode")
GDP_Edu <- GDP_Edu(desc(GDP_Edu$Gross.domestic.product.2012))
GDP_Edu <- GDP_Edu[desc(GDP_Edu$Gross.domestic.product.2012)]
GDP_Edu <- merge(GDP, education, "CountryCode")
GDP_Edu <- GDP_Edu[desc(as.numeric(GDP_Edu$Gross.domestic.product.2012))]
View(GDP)
View(GDP)
View(GDP_Edu)
GDP_Edu <- merge(GDP, education, "CountryCode")
View(GDP_Edu)
View(GDP_Edu)
GDP_Edu <- GDP_Edu[desc(as.numeric(GDP_Edu$GX.3))]
GDP_Edu <- GDP_Edu[desc(as.numeric(GDP_Edu$X.3))]
View(GDP_Edu)
View(GDP_Edu)
GDP_Edu <- GDP_Edu[desc(GDP_Edu$X.3)]
View(GDP)
View(GDP_Edu)
View(GDP_Edu)
View(GDP_Edu)
GDP_Edu <- merge(GDP, education, "CountryCode")
View(GDP_Edu)
GDP_Edu_sorted <- sort(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE, na.last = TRUE)
View(GDP_Edu)
View(GDP_Edu)
GDP_Edu <- merge(GDP, education, "CountryCode")
GDP_Edu_sorted <- GDP_Edu(order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE))
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE)]
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE),]
View(GDP_Edu_sorted)
GDP_Edu_sorted <- GDP_Edu[order(as.numeric(GDP_Edu$Gross.domestic.product.2012), decreasing = TRUE),]
View(GDP_Edu_sorted)
GDP_Edu$Gross.domestic.product.2012 <- as.numeric(GDP_Edu$Gross.domestic.product.2012)
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE),]
View(GDP)
GDP_Edu <- merge(GDP, education, "CountryCode")
GDP_Edu$Gross.domestic.product.2012 <- as.numeric(GDP_Edu$Gross.domestic.product.2012)
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE),]
rm(GDP_Edu_sorted)
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE),]
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$X.3, decreasing = TRUE),]
View(GDP_Edu_sorted)
GDP_Edu <- cbind(GDP, education, by ="CountryCode")
rm(GDP_Edu)
rm(GDP_Edu_sorted)
View(GDP)
View(GDP)
GDP$Gross.domestic.product.2012 <- as.numeric(GDP$Gross.domestic.product.2012)
GDP$X.3 <- as.numeric(GDP$X.3)
?match
con_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(con_GDP, "GDP")
download.file(con_GDP, "GDP", method = "curl")
GDP = read.csv(GDP)
GDP = read.csv("GDP")
rm(GDP)
GDP = read.csv("GDP")
View(GDP)
GDP = read.csv("GDP", skip=4, nrows=215)
colnames(GDP$X)<-"CountryCode"
colnames(GDP$X)<-"CountryCode"
del(GDP)
rm(GDP)
colnames(GDP$X)<-"CountryCode"
df.gdp <= read.csv("GDP", skip=4, nrows=215)
df.gdp <- read.csv("GDP", skip=4, nrows=215)
colnames(df.gdp$X) <- "CountryCode"
setnames(df.gdp,"X","CountryCode")
colnames(df.gdp$X)[colnames(df.gdp_=="X")] <- "CountryCode"
colnames(df.gdp)[colnames(df.gdp_=="X")] <- "CountryCode"
colnames(df.gdp)[colnames(df.gdp)=="X")] <- "CountryCode"
colnames(df.gdp)[colnames(df.gdp)=="X"] <- "CountryCode"
View(df.gdp)
View(df.gdp)
GDP_Edu <- merge(df.GDP, education, by = "CountryCode")
GDP_Edu <- merge(df.gdp, education, by = "CountryCode")
View(GDP_Edu)
View(GDP_Edu)
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE), list(CountryCode, Long.Name.X, X.1,, X.4)]
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE), list(CountryCode, Long.Name.X, X.1, X.4)]
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE), list("CountryCode", "Long.Name.X", "X.1", "X.4")]
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE), c("CountryCode", "Long.Name.X", "X.1", "X.4")]
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE),]
gdp_edu_sorted <- GDP_Edu[order("X.1", decreasing = TRUE),]
View(gdp_edu_sorted)
View(gdp_edu_sorted)
gdp_edu_sorted <- GDP_Edu[order("X.1", decreasing = TRUE),][13]
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, X.1, Long.Name.X,
rankingGDP, X.4)][13]
GDP_Edu <- merge(df.gdp, education, all=TRUE,by = "CountryCode")
View(GDP_Edu)
gdp_edu_sorted <- GDP_Edu[order("X.1", decreasing = TRUE),]
View(gdp_edu_sorted)
gdp_edu_sorted <- GDP_Edu[order("X.1", decreasing = TRUE),"Long.name.X"]
GDP_Edu$X.1 <- as.numeric(GDP_Edu$X.1)
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE),"Long.name.X"]
gdp_edu_sorted <- GDP_Edu[order("X.1", decreasing = TRUE),"Long.name.X"]
colnames(GDP_Edu)[colnames(GDP_Edu)=="X.1"] <- "gdprank"
colnames(GDP_Edu)[colnames(GDP_Edu)==X.1] <- "gdprank"
colnames(GDP_Edu)[colnames(GDP_Edu)=="X.1"] <- "gdprank"
View(GDP_Edu)
gdp_edu_sorted <- GDP_Edu[order(gdprank, decreasing = TRUE),"Long.name.X"]
gdp_edu_sorted <- GDP_Edu[order("gdprank", decreasing = TRUE),"Long.name.X"]
GDP_Edu[order("gdprank", decreasing = TRUE),"Long.name.X"]
GDP_Edu[order("gdprank", decreasing = TRUE),c("CountryCode", "gdprank",Long.name.X"]
""
GDP_Edu[order("gdprank", decreasing = TRUE),c("CountryCode", "gdprank","Long.name.X"]
GDP_Edu[order("gdprank", decreasing = TRUE),c("CountryCode", "gdprank","Long.name.X")]
GDP_Edu[order("gdprank", decreasing = TRUE),list("CountryCode", "gdprank","Long.name.X")]
GDP_Edu[order("gdprank", decreasing = TRUE),list(CountryCode,gdprank,Long.name.X)]
order(GDP_Edu, "gdprank")
gdp_edu_sorted <- arrange(GDP_Edu, desc(gdprank))
View(gdp_edu_sorted)
View(gdp_edu_sorted)
gdp_edu_sorted[13]
gdp_edu_sorted[,13]
gdp_edu_sorted[13,]
?order
?group
library(reshape2)
head(mtcars)
GDP <- read.csv(con_GDP, skip=4)
gdp.high <- GDP[GDP$Income.Group == "High.income"]
View(gdp.high)
View(gdp.high)
gdp.high <- GDP[GDP$Income.Group == "High.income",]
View(GDP)
View(GDP)
View(GDP)
View(GDP_Edu)
View(GDP_Edu)
gdp.high <- GDP_Edu[GDP_Edu$Income.Group == "High Income: OECD"]
gdp.high <- GDP_Edu[GDP_Edu$Income.Group == "High Income: OECD",]
View(gdp.high)
View(gdp.high)
View(gdp.high)
View(gdp.high)
View(GDP_Edu)
gdp.high <- GDP_Edu[GDP_Edu$Income.Group == "High income: OECD",]
mean(gdp.high$gdprank, na.rm = TRUE)
gdp.high2 <- GDP_Edu[GDP_Edu$Income.Group == "High income: nonOECD",]
mean(gdp.high2$gdprank, na.rm = TRUE)
quartile(GDP$gdprank)
quantile(GDP$gdprank)
quantile(GDP$gdprank, na.rm = TRUE)
GDP_Edu$RankGroup <- cut(GDP_Edu$gdprank, breaks = 5)
table(GDP_Edu$RankGroup, GDP_Edu$Income.Group)
library(dplyr)
rm(ls())
rm(list = ls())
con.gdp = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
con.edu = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
df.gdp <- read.csv(con.gdp)
df.edu <- read.csv(con.edu)
?match
head(df.gdp)
df.gdp <- read.csv(con.gdp, skip = 4)
head(df.gdp)
df.gdp <- rename(df.gdp, CountryCode = X, gdp.rank = X.1, name = X.2, gdp = X.3)
df.gdp <- read.csv(con.gdp, skip = 4)
df.gdp <- rename(df.gdp, CountryCode = X, gdp.rank = X.2, name = X.3, gdp = X.4)
df.gdp <- select(df.gdp, CountryCode, name, gdp.rank, gdp)
View(df.gdp)
df.gdp <- read.csv(con.gdp, skip = 4)
df.gdp <- rename(df.gdp, CountryCode = X, gdp.rank = X.1, name = X.3, gdp = X.4)
df.gdp <- select(df.gdp, CountryCode, name, gdp.rank, gdp)
View(df.edu)
View(df.edu)
df.edu.limited <- select(df.edu, CountryCode, Income.Group)
View(df.edu.limited)
View(df.edu.limited)
df.gdp_edu <- join(df.gdp, df.edu.limited, by = CountryCode)
df.gdp_edu <- join(df.gdp, df.edu.limited, by = "CountryCode")
View(df.gdp_edu)
arrange(df.gdp_edu, desc(gdp.rank)
)
df.gdp.edu <- arrange(df.gdp_edu, desc(gdp.rank))
View(df.gdp.edu)
df.gdp.edu <- arrange(df.gdp_edu, desc(as.numeric(gdp.rank))
)
View(df.gdp.edu)
View(df.gdp.edu)
?"dplyr"
mutate(df.gdp_edu, gdp.rank = as.numeric(gdp.rank))
df.gdp_edu <- mutate(df.gdp_edu, gdp.rank = as.numeric(gdp.rank))
df.gdp_edu <- arrange(df.gdp_edu, desc(gdp.rank))
View(df.gdp_edu)
df.gdp_edu$gdp.rank <- as.numeric(df.gdp$gdp.rank))
df.gdp_edu$gdp.rank <- as.numeric(df.gdp$gdp.rank)
df.gdp_edu <- merge(df.gdp, df.edu.limited, by="CountryCode")
df.gdp_edu$gdp.rank <- as.numeric(df.gdp$gdp.rank)
df.gdp_edu$gdp.rank <- as.numeric(df.gdp_edu$gdp.rank)
df.gdp_edu <- arrange(df.gdp_edu, desc(gdp.rank))
df.gdp_edu <- merge(df.gdp, df.edu.limited, by="CountryCode")
df.gdp_edu$gdp.rank <- as.numeric(as.character(df.gdp$gdp.rank))
df.gdp_edu$gdp.rank <- as.numeric(as.character(df.gdp_edu$gdp.rank))
df.gdp_edu <- arrange(df.gdp_edu, desc(gdp.rank))
gdp_group <- group_by(df.gdp_edu, Income.Group)
summarise(gdp_group)
summarise(gdp_group, avg=mean(gdp.rank, na.rm = TRUE))
df.gdp_edu$gdp.rank.group <- cut(df_gdp$gdp.rank, breaks = 5)
df.gdp_edu$gdp.rank.group <- cut(df.gdp_edu$gdp.rank, breaks = 5)
table(df.gdp_edu$gdp.rank.group,df.gdp_edu$Income.Group)
rm(list = ls())
install.packages("mgcv")
day_activity <- group_by(activity, date)
total_day <- summarize(day_activity,total=sum(steps))
hist(total_day$total,breaks=10,xlab="Steps", main="Steps per Day")
step_mean <- mean(total_day$total,na.rm=TRUE)
step_median <- median(total_day$total,na.rm=TRUE)
activity <- read.csv("data/activity.csv")
getwd
getwd()
setwd("~/Documents/Coursera/JohnsHopkins/Reproduceable Research/DailyActivity(assignment1)/RepData_PeerAssessment1")
activity <- read.csv("data/activity.csv")
day_activity <- group_by(activity, date)
total_day <- summarize(day_activity,total=sum(steps))
hist(total_day$total,breaks=10,xlab="Steps", main="Steps per Day")
step_mean <- mean(total_day$total,na.rm=TRUE)
step_median <- median(total_day$total,na.rm=TRUE)
day_activity <- group_by(activity, date)
equire(dplyr)
require(dplyr)
day_activity <- group_by(activity, date)
total_day <- summarize(day_activity,total=sum(steps))
day_activity <- group_by(activity, interval)
total_day <- summarize(day_activity, average=mean(steps, na.rm=TRUE))
step_maximum <- total_day$interval[which.max(total_day$total)]
step_maximum <- total_day$interval[which.max(total_day$average)]
View(activity)
missing_values <- sum(is.na(activity$steps))
typeof(activity$date)
activity$date[1]
modified_activity <- activity[activity$date <> "2012-10-01"]
modified_activity <- activity[activity$date != "2012-10-01"]
modified_activity <- filter(activity, date != "2012-10-01")
View(modified_activity)
day_activity <- group_by(activity, interval)
total_day <- summarize(day_activity, average=median(steps, na.rm=TRUE))
View(total_day)
modified_activity$steps[is.na(modified_activity$steps)] <- total_day$steps[modified_activity$interval]
View(total_day)
View(total_day)
modified_activity$steps[is.na(modified_activity$steps)] <- total_day$steps[modified_activity$interval==total_day$interval]
logical <- modified_activity[is.na(modified_activity$steps)]
logical <- modified_activity[is.na(modified_activity$steps),]
View(logical)
total_day$steps[total_day$interval==30]
total_day$steps[total_day$interval=="30"]
total_day$steps
View(total_day)
total_day$average[total_day$interval=="30"]
total_day$average[total_day$interval=="745"]
modified_activity$steps[is.na(modified_activity$steps)] <- total_day$average[modified_activity$interval]
modified_activity$steps[is.na(modified_activity$steps)] <- total_day$average[total_day$interval==modified_activity$interval]
with(modified_activity,
steps[is.na(steps)] <- total_day$average[total_day$interval==interval])
?as.factor
modified_activity <- filter(activity, date != "2012-10-01")
modified_activity$interval <- as.factor(modified_activity$interval)
modified_activity[is.na(modified_activity$steps)]
modified_activity[is.na(modified_activity$steps),"steps"]
modified_activity[is.na(modified_activity$steps),"steps"] <- total_day$average
modified_activity[is.na(modified_activity$steps),"steps"]
View(modified_activity)
View(modified_activity)
sum(is.na(modified_activity$steps))
modified_activity <- filter(activity, date != "2012-10-01")
modified_activity$interval <- as.factor(modified_activity$interval)
View(modified_activity)
sum(is.na(modified_activity$steps))
View(modified_activity)
View(modified_activity)
View(logical)
View(total_day)
View(total_day)
modified_activity[is.na(modified_activity$steps),"steps"] <- total_day$average
View(total_day)
View(modified_activity)
median_day <- summarize(day_activity, average=median(steps, na.rm=TRUE))
hist(median_day$average,breaks=10,xlab="Steps", main="Steps per Day")
mean_day <- summarize(day_activity, average=mean(steps, na.rm=TRUE))
hist(mean_day$average,breaks=10,xlab="Steps", main="Steps per Day")
median_day <- summarize(day_activity, average=median(steps, na.rm=TRUE))
hist(median_day$average,breaks=10,xlab="Steps", main="Steps per Day", col="red", xlib=220)
mean_day <- summarize(day_activity, average=mean(steps, na.rm=TRUE))
hist(mean_day$average,breaks=10,add=TRUE, col="blue")
median_day <- summarize(day_activity, average=median(steps, na.rm=TRUE))
hist(median_day$average,breaks=10,xlab="Steps", main="Steps per Day", col="red", xlim=220)
mean_day <- summarize(day_activity, average=mean(steps, na.rm=TRUE))
hist(mean_day$average,breaks=10,add=TRUE, col="blue")
median_day <- summarize(day_activity, average=median(steps, na.rm=TRUE))
hist(median_day$average,breaks=10,xlab="Steps", main="Steps per Day", col="red", xlim="220")
mean_day <- summarize(day_activity, average=mean(steps, na.rm=TRUE))
hist(mean_day$average,breaks=10,add=TRUE, col="blue")
?xlim
median_day <- summarize(day_activity, average=median(steps, na.rm=TRUE))
hist(median_day$average,breaks=10,xlab="Steps", main="Steps per Day", col="red", xlim=c(0,220)
mean_day <- summarize(day_activity, average=mean(steps, na.rm=TRUE))
hist(mean_day$average,breaks=10,add=TRUE, col="blue")
median_day <- summarize(day_activity, average=median(steps, na.rm=TRUE))
hist(median_day$average,breaks=10,xlab="Steps", main="Steps per Day", col="red", xlim=c(0,220))
mean_day <- summarize(day_activity, average=mean(steps, na.rm=TRUE))
hist(mean_day$average,breaks=10,add=TRUE, col="blue")
?breaks
?hist
?rgb
is.na(modified_activity$steps)
sum(is.na(modified_activity$steps))
activity$week <- as.factor(weekdays(activity$date))
activity$week <- as.factor(weekdays(as.date(activity$date)))
activity$week <- as.factor(weekdays(as.Date.POSIXlt(activity$date)))
?as.Date.date
activity$week <- as.factor(weekdays(as.Date.date(activity$date)))
activity$week <- weekdays(activity$date)
activity$date <- as.Date(activity$date)
activity$week <- weekdays(activity$date)
View(activity)
View(activity)
activity$week <- weekdays(as.Date(activity$date))
?ifelse
test <- ifelse((activity$week == "Saturday" || activity$week == "Sunday"), "week", "weekend")
activity$week <- ifelse((activity$week == "Saturday" || activity$week == "Sunday"), "week", "weekend")
View(activity)
activity$week <- weekdays(activity$date)
View(activity)
View(activity)
activity$week <- ifelse((activity$week == "Saturday" | activity$week == "Sunday"), "weekend", "week")
sum(activity[(activity$week)=="weekend"])
sum(activity[(activity$week)=="weekend",])
(activity[(activity$week)=="weekend",])
summary(activity[(activity$week)=="weekend",])
summary(activity[(activity$week)=="week",])
?par
x <- pmin(3, pmax(-3, stats::rnorm(50)))
y <- pmin(3, pmax(-3, stats::rnorm(50)))
xhist <- hist(x, breaks = seq(-3,3,0.5), plot = FALSE)
yhist <- hist(y, breaks = seq(-3,3,0.5), plot = FALSE)
top <- max(c(xhist$counts, yhist$counts))
xrange <- c(-3, 3)
yrange <- c(-3, 3)
nf <- layout(matrix(c(2,0,1,3),2,2,byrow = TRUE), c(3,1), c(1,3), TRUE)
layout.show(nf)
xhist <- hist(x, breaks = seq(-3,3,0.5))
x <- pmin(3, pmax(-3, stats::rnorm(50)))
y <- pmin(3, pmax(-3, stats::rnorm(50)))
xhist <- hist(x, breaks = seq(-3,3,0.5), plot = FALSE)
yhist <- hist(y, breaks = seq(-3,3,0.5), plot = FALSE)
top <- max(c(xhist$counts, yhist$counts))
xrange <- c(-3, 3)
yrange <- c(-3, 3)
nf <- layout(matrix(c(2,0,1,3),2,2,byrow = TRUE), c(3,1), c(1,3), TRUE)
layout.show(nf)
layout(matrix(c(2,0,1,3),2,2,byrow = TRUE), c(3,1), c(1,3), TRUE)
?d_ply
weekday <- modified_activity[week="week"]
weekend <- modified_activity[week="weekend"]
weekday <- modified_activity(modified_activity$week=="week")
weekend <- modified_activity(modified_activity$week=="weekend")
weekday <- modified_activity[modified_activity$week=="week"]
weekend <- modified_activity[modified_activity$week=="weekend"]
weekday <- modified_activity[modified_activity$week=="week",]
weekend <- modified_activity[modified_activity$week=="weekend",]
with(modified_activity,{
## Generate additional column with day of week
week <- weekdays(as.Date(date))
## Convert to "week" or "weekend"
week <- ifelse((week == "Saturday" | week == "Sunday"), "weekend", "week")
week <- as.factor(week)
})
View(modified_activity)
with(modified_activity,{
## Generate additional column with day of week
modified_activity$week <- weekdays(as.Date(date))
## Convert to "week" or "weekend"
week <- ifelse((week == "Saturday" | week == "Sunday"), "weekend", "week")
week <- as.factor(week)
})
modified_activity$week <- weekdays(as.Date(modified_activity$date))
with(modified_activity,{
## Convert to "week" or "weekend"
week <- ifelse((week == "Saturday" | week == "Sunday"), "weekend", "week")
week <- as.factor(week)
})
View(modified_activity)
View(modified_activity)
modified_activity$week <- weekdays(as.Date(modified_activity$date))
modified_activity$week <- ifelse((modified_activity$week == "Saturday" | modified_activity$week == "Sunday"), "weekend", "week")
modified_activity$week <- as.factor(modified_activity$week)
weekday <- modified_activity[modified_activity$week=="week"]
weekday <- modified_activity[modified_activity$week=="week",]
View(weekday)
weekend <- modified_activity[modified_activity$week=="weekend",]
weekday <- group_by(weekday, interval)
average_weekday <- summarize(weekday, average=mean(steps))
weekend <- group_by(weekend, interval)
average_weekday <- summarize(weekend, average=mean(steps))
weekday <- group_by(weekday, interval)
average_weekday <- summarize(weekday, average=mean(steps))
weekend <- group_by(weekend, interval)
average_weekend <- summarize(weekend, average=mean(steps))
View(average_weekday)
View(average_weekend)
par(mfrow=c(2,1))
with (average_weekday,
plot(interval,average, type="l", main="Weekday by Interval", xlab="5 Minute Interval", ylab="Steps"))
with (average_weekend,
plot(interval,average, type="l", main="Weekday by Interval", xlab="5 Minute Interval", ylab="Steps"))
par(mfrow=c(2,1))
with (average_weekday,
plot(interval,average, type="l", main="Weekday by Interval", xlab="", ylab="Steps"))
with (average_weekend,
plot(interval,average, type="l", main="Weekday by Interval", xlab="5 Minute Interval", ylab="Steps"))
