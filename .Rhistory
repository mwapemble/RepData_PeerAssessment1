x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(e, y)
set.seed(12)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(e,y)
source('~/Documents/Coursera/JohnsHopkins/R Code/rankall.R')
Rprof()
rankall("pneumonia")
Rprof(NULL)
summaryRprof()
Rprof()
rankhospital("VA", "heart failure")
source('~/Documents/Coursera/JohnsHopkins/R Code/rankhospital.R')
rankhospital("VA", "heart failure")
Rprof(NULL)
summaryRprof()
Rprof()
rankhospital("VA", "heart failure")
Rprof(NULL)
summaryRprof()
?rpois
?set.seed
?rpois
source('~/Documents/Coursera/JohnsHopkins/R Code/makevector.R')
source('~/Documents/Coursera/JohnsHopkins/R Code/makevector.R')
set.seed(1)
test ,- rnorm(20)
test <- rnorm(20)
test
makeVector(test)
makeVector
makeVector(1)
makeVector(test)
source('~/Documents/Coursera/JohnsHopkins/R Code/makevector.R')
cachemean(test)
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = setinverse)
}
source('~/Documents/Coursera/JohnsHopkins/R Code/Prog2.R')
z <- c(2, 1, 2 4)
z <- c(2, 1, 2, 4)
dim(z) <- 2
dim(z)
z
matrix <- (z, 2, 2)
test <- matrix(z, 2, 2)
test
solve(test)
?solve
cacheSolve(test)
source('~/Documents/Coursera/JohnsHopkins/R Code/Prog2.R')
m <- makeCacheMatrix(test)
m
m$get()
cacheSolve(test)
source('~/Documents/Coursera/JohnsHopkins/R Code/Prog2.R')
m <- makeCacheMatrix(test)
cacheSolve(test)
is.recursive(test)
source('~/Documents/Coursera/JohnsHopkins/R Code/makevector.R')
mtest <- rnorm(10)
cachemean(mtest)
source('~/Documents/Coursera/JohnsHopkins/R Code/Prog2.R')
cacheSolve(test)
x$get
i <- x$getinverse()
makeCacheMatrix(test)
cacheSolve(test)
temp <- makeCacheMatrix(test)
cacheSolve(temp)
cacheSolve(temp)
temp2
temp2 <- matrix(rnorm(9),3,3)
temp <- makeCacheMatrix(temp2)
cacheSolve(temp)
cacheSolve(temp)
temp2 <- matrix(rnorm(9),3,3)
temp <- makeCacheMatrix(temp2)
> cacheSolve(temp)
cacheSolve(temp)
cacheSolve(temp)
temp2 <- matrix(rnorm(1000000),1000,1000)
temp <- makeCacheMatrix(temp2)
cacheSolve(temp)
cacheSolve(temp)
source('~/Documents/Coursera/JohnsHopkins/R Code/Prog2.R')
x <- matrix(rnorm(4),2,2)
x
solve(x, ...)
source('~/Documents/Coursera/JohnsHopkins/R Code/Prog2.R')
makeCacheMatrix(x)
cacheSolve(x)
test <- makeCacheMatrix(x)
cacheSolve(test)
cacheSolve(test)
source('~/Documents/Coursera/JohnsHopkins/R Code/Prog2.R')
getwd()
cd(..)
ls
ls()
getwd()
library(sqldf)
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
temp <- sqldf("select pwgtp1 from acs where AGEP < 50")
temp
fn1 <- unique(acs$AGEP)
fn2 <- sqldf("select distinct AGEP from acs")
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode= readLines(con)
close(con)
htmlCode
nchar(htmlCode[10])
nchar(htmlCode[c(10,20,30,100)])
con <- file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
head(con)
close(con)
read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
install.packages("foreign")
library(foreigh)
library(foreign)
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip=2)
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=10,skip=2)
df.sst <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,4,3,4,3,4,3,4,3),skip=2)
View(df.sst)
df.sst <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,5,4,4,5,4,4,5,4,4,5,4,4),skip=4)
dim(df.sst)
sum(df.sst[,6])
df.sst <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4),skip=4)
df.sst <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4),header=TRUE,skip=3)
df.sst[,1] <- dmy(df.sst[,1])
library(lubridate)
df.sst[,1] <- dmy(df.sst[,1])
library(tidyr)
?tidyr
??tidyr
names(df.sst) <- c("Week","NINO1+2_SST","NINO1+2_SSTA","NINO3_SST","NINO3_SSTA","NINO34_SST","NINO34_SSTA","NINO4_SST","NINO4_SSTA")
df.sst[order(df.sst$Week),]
df.sst <- df.sst[order(df.sst$Week),]
df.sst <- df.sst[order(-df.sst$Week),]
str(df.sst)
colsum(is.na(df.sst))
colSums(is.na(df.sst))
q3.1 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
head q3.1
head(q3.1)
agriculture.logical <- q3.1[(q3.1$acr==3) & (q3.1$ags==6)]
head agriculture.logical
head (agriculture.logical)
agriculture.logical
agriculture.logical <- q3.1[(q3.1$ACR==3) & (q3.1$AGS==6)]
agriculture.logical <- q3.1[,(q3.1$ACR==3) & (q3.1$AGS==6)]
agriculture.logical <- q3.1((q3.1$ACR==3) & (q3.1$AGS==6))
agriculture.logical <- q3.1[((q3.1$ACR==3) & (q3.1$AGS==6))]
agriculture.logical <- q3.1[((q3.1$ACR==3) & (q3.1$AGS==6)),]
head agriculture.logical
View(agriculture.logical)
View(agriculture.logical)
View(agriculture.logical)
q3.1[((q3.1$ACR==3) & (q3.1$AGS==6))]
q3.1[((q3.1$ACR==3) & (q3.1$AGS==6)),]
na.omit(q3.1[((q3.1$ACR==3) & (q3.1$AGS==6)),])
q3.1[(na.omit(q3.1$ACR==3)) & na.omit(q3.1$AGS==6)),]
q3.1[(na.omit(q3.1$ACR==3) & na.omit(q3.1$AGS==6),]
q3.1[(na.omit(q3.1$ACR==3) & na.omit(q3.1$AGS==6)]
q3.1[na.omit(q3.1$ACR==3) & na.omit(q3.1$AGS==6),]
head(q3.1[na.omit(q3.1$ACR==3) & na.omit(q3.1$AGS==6),])
testLogical <- q3.1[q3.1$ACR == 3]
testLogical <- q3.1[q3.1$ACR == 3,]
View(testLogical)
View(testLogical)
agricultureLogical = (q3.1$ACS == 3) & (q3.1$AGS == 6)
View(agriculture.logical)
View(agriculture.logical)
agricultureLogical = ifelse((q3.1$ACS == 3) & (q3.1$AGS == 6)), TRUE, FALSE)
agricultureLogical = ifelse(((q3.1$ACS == 3) & (q3.1$AGS == 6)), TRUE, FALSE)
agricultureLogical
agricultureLogical = ifelse(((q3.1$ACR == 3) & (q3.1$AGS == 6)), TRUE, FALSE)
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
picture <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
picture <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
con <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
readJPEG(con, native = TRUE)
download.file(con, mode="wb")
download.file(con, "picture",mode="wb")
download.file(con,picture,mode="wb")
download.file(con,picture.jeff,method="curl", mode="wb")
touch("picture.jeff"")
)
;
""
con
target <- "picture"
download.file(con,target,method="curl", mode="wb")
pic_jeff <- readJPEG(target, native = TRUE)
quantile(pic_jeff,.3,.8)
quantile(pic_jeff,c(.3,.8)
)
con <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv
con <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
GDP <- read.csv(con)
con = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
education <- read.csv(con)
View(GDP)
View(education)
View(GDP)
name(GDP)
names(GDP)
names(GDP$X) <- "CountryCode"
View(GDP)
View(GDP)
colnames(GDP)[1] <- "CountryCode"
merge(GDP, education, "CountryCode")
GDP_Edu <- merge(GDP, education, "CountryCode")
View(GDP_Edu)
View(GDP_Edu)
GDP_Edu <- GDP_Edu[desc(GDP_Edu$Gross.domestic.product.2012)]
desc
desc()
library(plyr)
?desc
GDP_Edu <- GDP_Edu[desc(GDP_Edu$Gross.domestic.product.2012)]
GDP_Edu <- merge(GDP, education, "CountryCode")
GDP_Edu <- GDP_Edu[desc(as.numeric((GDP_Edu$Gross.domestic.product.2012))]
GDP_Edu$Gross.domestic.product.2012 <- as.numeric(GDP_Edu$Gross.domestic.product.2012)
GDP_Edu <- GDP_Edu[desc(GDP_Edu$Gross.domestic.product.2012)]
GDP_Edu(13)
GDP_Edu[13]
GDP_Edu[13,2]
GDP_Edu[2,]
GDP_Edu[13,]
View(GDP_Edu)
GDP_Edu <- merge(GDP, education, "CountryCode")
GDP_Edu <- GDP_Edu(desc(GDP_Edu$Gross.domestic.product.2012))
GDP_Edu <- GDP_Edu[desc(GDP_Edu$Gross.domestic.product.2012)]
GDP_Edu <- merge(GDP, education, "CountryCode")
GDP_Edu <- GDP_Edu[desc(as.numeric(GDP_Edu$Gross.domestic.product.2012))]
View(GDP)
View(GDP)
View(GDP_Edu)
GDP_Edu <- merge(GDP, education, "CountryCode")
View(GDP_Edu)
View(GDP_Edu)
GDP_Edu <- GDP_Edu[desc(as.numeric(GDP_Edu$GX.3))]
GDP_Edu <- GDP_Edu[desc(as.numeric(GDP_Edu$X.3))]
View(GDP_Edu)
View(GDP_Edu)
GDP_Edu <- GDP_Edu[desc(GDP_Edu$X.3)]
View(GDP)
View(GDP_Edu)
View(GDP_Edu)
View(GDP_Edu)
GDP_Edu <- merge(GDP, education, "CountryCode")
View(GDP_Edu)
GDP_Edu_sorted <- sort(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE, na.last = TRUE)
View(GDP_Edu)
View(GDP_Edu)
GDP_Edu <- merge(GDP, education, "CountryCode")
GDP_Edu_sorted <- GDP_Edu(order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE))
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE)]
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE),]
View(GDP_Edu_sorted)
GDP_Edu_sorted <- GDP_Edu[order(as.numeric(GDP_Edu$Gross.domestic.product.2012), decreasing = TRUE),]
View(GDP_Edu_sorted)
GDP_Edu$Gross.domestic.product.2012 <- as.numeric(GDP_Edu$Gross.domestic.product.2012)
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE),]
View(GDP)
GDP_Edu <- merge(GDP, education, "CountryCode")
GDP_Edu$Gross.domestic.product.2012 <- as.numeric(GDP_Edu$Gross.domestic.product.2012)
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE),]
rm(GDP_Edu_sorted)
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$Gross.domestic.product.2012, decreasing = TRUE),]
GDP_Edu_sorted <- GDP_Edu[order(GDP_Edu$X.3, decreasing = TRUE),]
View(GDP_Edu_sorted)
GDP_Edu <- cbind(GDP, education, by ="CountryCode")
rm(GDP_Edu)
rm(GDP_Edu_sorted)
View(GDP)
View(GDP)
GDP$Gross.domestic.product.2012 <- as.numeric(GDP$Gross.domestic.product.2012)
GDP$X.3 <- as.numeric(GDP$X.3)
?match
con_GDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(con_GDP, "GDP")
download.file(con_GDP, "GDP", method = "curl")
GDP = read.csv(GDP)
GDP = read.csv("GDP")
rm(GDP)
GDP = read.csv("GDP")
View(GDP)
GDP = read.csv("GDP", skip=4, nrows=215)
colnames(GDP$X)<-"CountryCode"
colnames(GDP$X)<-"CountryCode"
del(GDP)
rm(GDP)
colnames(GDP$X)<-"CountryCode"
df.gdp <= read.csv("GDP", skip=4, nrows=215)
df.gdp <- read.csv("GDP", skip=4, nrows=215)
colnames(df.gdp$X) <- "CountryCode"
setnames(df.gdp,"X","CountryCode")
colnames(df.gdp$X)[colnames(df.gdp_=="X")] <- "CountryCode"
colnames(df.gdp)[colnames(df.gdp_=="X")] <- "CountryCode"
colnames(df.gdp)[colnames(df.gdp)=="X")] <- "CountryCode"
colnames(df.gdp)[colnames(df.gdp)=="X"] <- "CountryCode"
View(df.gdp)
View(df.gdp)
GDP_Edu <- merge(df.GDP, education, by = "CountryCode")
GDP_Edu <- merge(df.gdp, education, by = "CountryCode")
View(GDP_Edu)
View(GDP_Edu)
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE), list(CountryCode, Long.Name.X, X.1,, X.4)]
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE), list(CountryCode, Long.Name.X, X.1, X.4)]
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE), list("CountryCode", "Long.Name.X", "X.1", "X.4")]
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE), c("CountryCode", "Long.Name.X", "X.1", "X.4")]
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE),]
gdp_edu_sorted <- GDP_Edu[order("X.1", decreasing = TRUE),]
View(gdp_edu_sorted)
View(gdp_edu_sorted)
gdp_edu_sorted <- GDP_Edu[order("X.1", decreasing = TRUE),][13]
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, X.1, Long.Name.X,
rankingGDP, X.4)][13]
GDP_Edu <- merge(df.gdp, education, all=TRUE,by = "CountryCode")
View(GDP_Edu)
gdp_edu_sorted <- GDP_Edu[order("X.1", decreasing = TRUE),]
View(gdp_edu_sorted)
gdp_edu_sorted <- GDP_Edu[order("X.1", decreasing = TRUE),"Long.name.X"]
GDP_Edu$X.1 <- as.numeric(GDP_Edu$X.1)
gdp_edu_sorted <- GDP_Edu[order(X.1, decreasing = TRUE),"Long.name.X"]
gdp_edu_sorted <- GDP_Edu[order("X.1", decreasing = TRUE),"Long.name.X"]
colnames(GDP_Edu)[colnames(GDP_Edu)=="X.1"] <- "gdprank"
colnames(GDP_Edu)[colnames(GDP_Edu)==X.1] <- "gdprank"
colnames(GDP_Edu)[colnames(GDP_Edu)=="X.1"] <- "gdprank"
View(GDP_Edu)
gdp_edu_sorted <- GDP_Edu[order(gdprank, decreasing = TRUE),"Long.name.X"]
gdp_edu_sorted <- GDP_Edu[order("gdprank", decreasing = TRUE),"Long.name.X"]
GDP_Edu[order("gdprank", decreasing = TRUE),"Long.name.X"]
GDP_Edu[order("gdprank", decreasing = TRUE),c("CountryCode", "gdprank",Long.name.X"]
""
GDP_Edu[order("gdprank", decreasing = TRUE),c("CountryCode", "gdprank","Long.name.X"]
GDP_Edu[order("gdprank", decreasing = TRUE),c("CountryCode", "gdprank","Long.name.X")]
GDP_Edu[order("gdprank", decreasing = TRUE),list("CountryCode", "gdprank","Long.name.X")]
GDP_Edu[order("gdprank", decreasing = TRUE),list(CountryCode,gdprank,Long.name.X)]
order(GDP_Edu, "gdprank")
gdp_edu_sorted <- arrange(GDP_Edu, desc(gdprank))
View(gdp_edu_sorted)
View(gdp_edu_sorted)
gdp_edu_sorted[13]
gdp_edu_sorted[,13]
gdp_edu_sorted[13,]
?order
?group
library(reshape2)
head(mtcars)
GDP <- read.csv(con_GDP, skip=4)
gdp.high <- GDP[GDP$Income.Group == "High.income"]
View(gdp.high)
View(gdp.high)
gdp.high <- GDP[GDP$Income.Group == "High.income",]
View(GDP)
View(GDP)
View(GDP)
View(GDP_Edu)
View(GDP_Edu)
gdp.high <- GDP_Edu[GDP_Edu$Income.Group == "High Income: OECD"]
gdp.high <- GDP_Edu[GDP_Edu$Income.Group == "High Income: OECD",]
View(gdp.high)
View(gdp.high)
View(gdp.high)
View(gdp.high)
View(GDP_Edu)
gdp.high <- GDP_Edu[GDP_Edu$Income.Group == "High income: OECD",]
mean(gdp.high$gdprank, na.rm = TRUE)
gdp.high2 <- GDP_Edu[GDP_Edu$Income.Group == "High income: nonOECD",]
mean(gdp.high2$gdprank, na.rm = TRUE)
quartile(GDP$gdprank)
quantile(GDP$gdprank)
quantile(GDP$gdprank, na.rm = TRUE)
GDP_Edu$RankGroup <- cut(GDP_Edu$gdprank, breaks = 5)
table(GDP_Edu$RankGroup, GDP_Edu$Income.Group)
library(dplyr)
rm(ls())
rm(list = ls())
con.gdp = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
con.edu = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
df.gdp <- read.csv(con.gdp)
df.edu <- read.csv(con.edu)
?match
head(df.gdp)
df.gdp <- read.csv(con.gdp, skip = 4)
head(df.gdp)
df.gdp <- rename(df.gdp, CountryCode = X, gdp.rank = X.1, name = X.2, gdp = X.3)
df.gdp <- read.csv(con.gdp, skip = 4)
df.gdp <- rename(df.gdp, CountryCode = X, gdp.rank = X.2, name = X.3, gdp = X.4)
df.gdp <- select(df.gdp, CountryCode, name, gdp.rank, gdp)
View(df.gdp)
df.gdp <- read.csv(con.gdp, skip = 4)
df.gdp <- rename(df.gdp, CountryCode = X, gdp.rank = X.1, name = X.3, gdp = X.4)
df.gdp <- select(df.gdp, CountryCode, name, gdp.rank, gdp)
View(df.edu)
View(df.edu)
df.edu.limited <- select(df.edu, CountryCode, Income.Group)
View(df.edu.limited)
View(df.edu.limited)
df.gdp_edu <- join(df.gdp, df.edu.limited, by = CountryCode)
df.gdp_edu <- join(df.gdp, df.edu.limited, by = "CountryCode")
View(df.gdp_edu)
arrange(df.gdp_edu, desc(gdp.rank)
)
df.gdp.edu <- arrange(df.gdp_edu, desc(gdp.rank))
View(df.gdp.edu)
df.gdp.edu <- arrange(df.gdp_edu, desc(as.numeric(gdp.rank))
)
View(df.gdp.edu)
View(df.gdp.edu)
?"dplyr"
mutate(df.gdp_edu, gdp.rank = as.numeric(gdp.rank))
df.gdp_edu <- mutate(df.gdp_edu, gdp.rank = as.numeric(gdp.rank))
df.gdp_edu <- arrange(df.gdp_edu, desc(gdp.rank))
View(df.gdp_edu)
df.gdp_edu$gdp.rank <- as.numeric(df.gdp$gdp.rank))
df.gdp_edu$gdp.rank <- as.numeric(df.gdp$gdp.rank)
df.gdp_edu <- merge(df.gdp, df.edu.limited, by="CountryCode")
df.gdp_edu$gdp.rank <- as.numeric(df.gdp$gdp.rank)
df.gdp_edu$gdp.rank <- as.numeric(df.gdp_edu$gdp.rank)
df.gdp_edu <- arrange(df.gdp_edu, desc(gdp.rank))
df.gdp_edu <- merge(df.gdp, df.edu.limited, by="CountryCode")
df.gdp_edu$gdp.rank <- as.numeric(as.character(df.gdp$gdp.rank))
df.gdp_edu$gdp.rank <- as.numeric(as.character(df.gdp_edu$gdp.rank))
df.gdp_edu <- arrange(df.gdp_edu, desc(gdp.rank))
gdp_group <- group_by(df.gdp_edu, Income.Group)
summarise(gdp_group)
summarise(gdp_group, avg=mean(gdp.rank, na.rm = TRUE))
df.gdp_edu$gdp.rank.group <- cut(df_gdp$gdp.rank, breaks = 5)
df.gdp_edu$gdp.rank.group <- cut(df.gdp_edu$gdp.rank, breaks = 5)
table(df.gdp_edu$gdp.rank.group,df.gdp_edu$Income.Group)
rm(list = ls())
require(ggplot2)
plot_weekday <- ggplot(average_weekday, aes(interval, average))
plot_weekday <- plot_weekday + labs(title="weekday"))
plot_weekend <- ggplot(average_weekend, aes(interval, average))
plot_weekend <- plot_weekend + geom_line(aes(color=City)) + labs(title="weekend")
grid.arrange(plot_weekend,plot_weekday,nrow=2)
require(gridExtra)
?plot
head(average_weekend)
```{r echo=TRUE}
## Initialise variables
data.directory <- "data"
datafile <- "activity.zip"
## Options set to prevent mean values displaying in scientific notation.
options("scipen"=100, "digits"=8)
## Check to see if there is a data directory
## If not, create it.
if (!file.exists(data.directory)) {
dir.create(data.directory)
}
## Extract files from zip archive
datafile <- paste(".", data.directory, datafile, sep="/")
if (!file.exists(datafile))
{
unzip("activity.zip", exdir = data.directory)
}
## Then extract & subset to get the relevant data
activity <- read.csv("data/activity.csv")
## Initialise variables
data.directory <- "data"
datafile <- "activity.zip"
## Options set to prevent mean values displaying in scientific notation.
options("scipen"=100, "digits"=8)
## Check to see if there is a data directory
## If not, create it.
if (!file.exists(data.directory)) {
dir.create(data.directory)
}
## Extract files from zip archive
datafile <- paste(".", data.directory, datafile, sep="/")
if (!file.exists(datafile))
{
unzip("activity.zip", exdir = data.directory)
}
## Then extract & subset to get the relevant data
activity <- read.csv("data/activity.csv")
setwd("~/Documents/Coursera/JohnsHopkins/Reproduceable Research/DailyActivity(assignment1)/RepData_PeerAssessment1")
?ggplot
library(ggplot2)
?ggplot
?qplot
?grid.arrange
library(gridExtra)
?grid.arrange
?qplot
library(lattice)
?"lattice"
?xyplot
?xyplot
